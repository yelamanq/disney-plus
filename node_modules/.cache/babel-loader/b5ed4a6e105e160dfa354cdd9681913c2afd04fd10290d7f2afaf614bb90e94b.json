{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAL5EDhDXPv9ygraj7jVNhFRGEjzCWmxpE\",\n  authDomain: \"disney-clone-b10cf.firebaseapp.com\",\n  projectId: \"disney-clone-b10cf\",\n  storageBucket: \"disney-clone-b10cf.firebasestorage.app\",\n  messagingSenderId: \"1048982349735\",\n  appId: \"1:1048982349735:web:b3fff442f69a7dba383882\",\n  measurementId: \"G-F23VLMW30W\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst db = getFirestore(firebaseApp);\nconst auth = getAuth(firebaseApp);\nconst provider = new GoogleAuthProvider();\nconst storage = getStorage(firebaseApp);\nexport { auth, provider, storage };\nexport default db;","map":{"version":3,"names":["initializeApp","getFirestore","getAuth","GoogleAuthProvider","getStorage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","db","auth","provider","storage"],"sources":["/Users/yela/vscodeProjects/disney-clone/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAL5EDhDXPv9ygraj7jVNhFRGEjzCWmxpE\",\n  authDomain: \"disney-clone-b10cf.firebaseapp.com\",\n  projectId: \"disney-clone-b10cf\",\n  storageBucket: \"disney-clone-b10cf.firebasestorage.app\",\n  messagingSenderId: \"1048982349735\",\n  appId: \"1:1048982349735:web:b3fff442f69a7dba383882\",\n  measurementId: \"G-F23VLMW30W\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst db = getFirestore(firebaseApp);\nconst auth = getAuth(firebaseApp);\nconst provider = new GoogleAuthProvider();\nconst storage = getStorage(firebaseApp);\n\nexport { auth, provider, storage };\nexport default db;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,oCAAoC;EAChDC,SAAS,EAAE,oBAAoB;EAC/BC,aAAa,EAAE,wCAAwC;EACvDC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE,4CAA4C;EACnDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAGb,aAAa,CAACK,cAAc,CAAC;AAEjD,MAAMS,EAAE,GAAGb,YAAY,CAACY,WAAW,CAAC;AACpC,MAAME,IAAI,GAAGb,OAAO,CAACW,WAAW,CAAC;AACjC,MAAMG,QAAQ,GAAG,IAAIb,kBAAkB,CAAC,CAAC;AACzC,MAAMc,OAAO,GAAGb,UAAU,CAACS,WAAW,CAAC;AAEvC,SAASE,IAAI,EAAEC,QAAQ,EAAEC,OAAO;AAChC,eAAeH,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}