import{a as j}from"../chunk-Y4PL6ZOT.js";import{u as U}from"../chunk-5L6BPGXX.js";import"../chunk-STOZMFXW.js";import{e as t,f as l,g as u,h as p,j as Q}from"../chunk-BTBUZ646.js";Q();var W,_,B,M,C,m,L,b,k,T,A,O,x,v,G,P,R,I,$,o,H,D,w,K,F=class F extends j{constructor(e,r){super();l(this,o);l(this,W);l(this,_,0);l(this,B,!1);l(this,M,!1);l(this,C,!1);l(this,m,new EventTarget);l(this,L);l(this,b,!1);l(this,k);l(this,T);l(this,A);l(this,O);l(this,x);l(this,v);l(this,G);l(this,P,new Map);l(this,R,new Set);l(this,I);l(this,$,[]);u(this,k,e),u(this,L,U()),u(this,I,r?.extensions??{}),u(this,A,new Promise(d=>{t(this,k).addEventListener("message",s=>{if(s.data.type==="here")d();else throw new Error("Invalid message")},{once:!0})})),u(this,O,new Promise(d=>{let s=a=>{a.data.type==="ready"&&(u(this,T,a.data.id),t(this,k).removeEventListener("message",s),d())};t(this,k).addEventListener("message",s)})),u(this,W,p(this,o,H).call(this,r))}static async create(e,r){let d=new F(e,r);return await t(d,W),d}get waitReady(){return new Promise(e=>{t(this,W).then(()=>{t(this,b)?e():e(new Promise(r=>{t(this,m).addEventListener("connected",()=>{r()})}))})})}get debug(){return t(this,_)}get ready(){return t(this,B)}get closed(){return t(this,M)}get isLeader(){return t(this,C)}async close(){var e;t(this,M)||(u(this,M,!0),t(this,x)?.close(),t(this,v)?.close(),(e=t(this,G))==null||e.call(this),t(this,k).terminate())}async[Symbol.asyncDispose](){await this.close()}async execProtocolRaw(e){return await p(this,o,w).call(this,"execProtocolRaw",e)}async execProtocol(e){return await p(this,o,w).call(this,"execProtocol",e)}async syncToFs(){await p(this,o,w).call(this,"syncToFs")}async listen(e,r){return await this.waitReady,t(this,P).has(e)||t(this,P).set(e,new Set),t(this,P).get(e)?.add(r),await this.exec(`LISTEN ${e}`),async()=>{await this.unlisten(e,r)}}async unlisten(e,r){await this.waitReady,r?t(this,P).get(e)?.delete(r):t(this,P).delete(e),t(this,P).get(e)?.size===0&&await this.exec(`UNLISTEN ${e}`)}onNotification(e){return t(this,R).add(e),()=>{t(this,R).delete(e)}}offNotification(e){t(this,R).delete(e)}async dumpDataDir(){return await p(this,o,w).call(this,"dumpDataDir")}onLeaderChange(e){return t(this,m).addEventListener("leader-change",e),()=>{t(this,m).removeEventListener("leader-change",e)}}offLeaderChange(e){t(this,m).removeEventListener("leader-change",e)}async _handleBlob(e){await p(this,o,w).call(this,"_handleBlob",e)}async _getWrittenBlob(){return await p(this,o,w).call(this,"_getWrittenBlob")}async _cleanupBlob(){await p(this,o,w).call(this,"_cleanupBlob")}async _checkReady(){await this.waitReady}async _runExclusiveQuery(e){await p(this,o,w).call(this,"_acquireQueryLock");try{return await e()}finally{await p(this,o,w).call(this,"_releaseQueryLock")}}async _runExclusiveTransaction(e){await p(this,o,w).call(this,"_acquireTransactionLock");try{return await e()}finally{await p(this,o,w).call(this,"_releaseTransactionLock")}}};W=new WeakMap,_=new WeakMap,B=new WeakMap,M=new WeakMap,C=new WeakMap,m=new WeakMap,L=new WeakMap,b=new WeakMap,k=new WeakMap,T=new WeakMap,A=new WeakMap,O=new WeakMap,x=new WeakMap,v=new WeakMap,G=new WeakMap,P=new WeakMap,R=new WeakMap,I=new WeakMap,$=new WeakMap,o=new WeakSet,H=async function(e={}){for(let[n,y]of Object.entries(t(this,I))){if(y instanceof URL)throw new Error("URL extensions are not supported on the client side of a worker");{let c=await y.setup(this,{},!0);if(c.emscriptenOpts&&console.warn(`PGlite extension ${n} returned emscriptenOpts, these are not supported on the client side of a worker`),c.namespaceObj){let E=this;E[n]=c.namespaceObj}c.bundlePath&&console.warn(`PGlite extension ${n} returned bundlePath, this is not supported on the client side of a worker`),c.init&&await c.init(),c.close&&t(this,$).push(c.close)}}await t(this,A);let{extensions:r,...d}=e;t(this,k).postMessage({type:"init",options:d}),await t(this,O);let s=`pglite-tab-close:${t(this,L)}`;u(this,G,await N(s));let a=`pglite-broadcast:${t(this,T)}`;u(this,x,new BroadcastChannel(a));let h=`pglite-tab:${t(this,L)}`;u(this,v,new BroadcastChannel(h)),t(this,x).addEventListener("message",async n=>{n.data.type==="leader-here"?(u(this,b,!1),t(this,m).dispatchEvent(new Event("leader-change")),p(this,o,D).call(this)):n.data.type==="notify"&&p(this,o,K).call(this,n.data.channel,n.data.payload)}),t(this,v).addEventListener("message",async n=>{n.data.type==="connected"&&(u(this,b,!0),t(this,m).dispatchEvent(new Event("connected")),u(this,_,await p(this,o,w).call(this,"getDebugLevel")),u(this,B,!0))}),t(this,k).addEventListener("message",async n=>{n.data.type==="leader-now"&&(u(this,C,!0),t(this,m).dispatchEvent(new Event("leader-change")))}),p(this,o,D).call(this),this._initArrayTypes()},D=async function(){t(this,b)||(t(this,x).postMessage({type:"tab-here",id:t(this,L)}),setTimeout(()=>p(this,o,D).call(this),16))},w=async function(e,...r){let d=U(),s={type:"rpc-call",callId:d,method:e,args:r};return t(this,v).postMessage(s),await new Promise((a,h)=>{let n=E=>{if(E.data.callId!==d)return;c();let f=E.data;if(f.type==="rpc-return")a(f.result);else if(f.type==="rpc-error"){let S=new Error(f.error.message);Object.assign(S,f.error),h(S)}else h(new Error("Invalid message"))},y=()=>{c(),h(new q)},c=()=>{t(this,v).removeEventListener("message",n),t(this,m).removeEventListener("leader-change",y)};t(this,m).addEventListener("leader-change",y),t(this,v).addEventListener("message",n)})},K=function(e,r){let d=t(this,P).get(e);if(d)for(let s of d)queueMicrotask(()=>s(r));for(let s of t(this,R))queueMicrotask(()=>s(e,r))};var z=F;async function te({init:g}){postMessage({type:"here"});let i=await new Promise(y=>{addEventListener("message",c=>{c.data.type==="init"&&y(c.data.options)},{once:!0})}),e=i.id??`${import.meta.url}:${i.dataDir??""}`;postMessage({type:"ready",id:e});let r=`pglite-election-lock:${e}`,d=`pglite-broadcast:${e}`,s=new BroadcastChannel(d),a=new Set;await N(r);let h=g(i);s.onmessage=async y=>{let c=y.data;switch(c.type){case"tab-here":J(c.id,await h,a);break}},s.postMessage({type:"leader-here",id:e}),postMessage({type:"leader-now"}),(await h).onNotification((y,c)=>{s.postMessage({type:"notify",channel:y,payload:c})})}function J(g,i,e){if(e.has(g))return;e.add(g);let r=`pglite-tab:${g}`,d=`pglite-tab-close:${g}`,s=new BroadcastChannel(r);navigator.locks.request(d,()=>new Promise(h=>{s.close(),e.delete(g),h()}));let a=V(g,i);s.addEventListener("message",async h=>{let n=h.data;switch(n.type){case"rpc-call":{await i.waitReady;let{callId:y,method:c,args:E}=n;try{let f=await a[c](...E);s.postMessage({type:"rpc-return",callId:y,result:f})}catch(f){console.error(f),s.postMessage({type:"rpc-error",callId:y,error:{message:f.message}})}break}}}),s.postMessage({type:"connected"})}function V(g,i){let e=null,r=null,d=`pglite-tab-close:${g}`;return N(d).then(()=>{r&&i.exec("ROLLBACK"),e?.(),r?.()}),{async getDebugLevel(){return i.debug},async close(){await i.close()},async execProtocol(s){let{messages:a,data:h}=await i.execProtocol(s);if(h.byteLength!==h.buffer.byteLength){let n=new ArrayBuffer(h.byteLength),y=new Uint8Array(n);return y.set(h),{messages:a,data:y}}else return{messages:a,data:h}},async execProtocolRaw(s){let a=await i.execProtocolRaw(s);if(a.byteLength!==a.buffer.byteLength){let h=new ArrayBuffer(a.byteLength),n=new Uint8Array(h);return n.set(a),n}else return a},async dumpDataDir(){return await i.dumpDataDir()},async syncToFs(){return await i.syncToFs()},async _handleBlob(s){return await i._handleBlob(s)},async _getWrittenBlob(){return await i._getWrittenBlob()},async _cleanupBlob(){return await i._cleanupBlob()},async _checkReady(){return await i._checkReady()},async _acquireQueryLock(){return new Promise(s=>{i._runExclusiveQuery(()=>new Promise(a=>{e=a,s()}))})},async _releaseQueryLock(){e?.(),e=null},async _acquireTransactionLock(){return new Promise(s=>{i._runExclusiveTransaction(()=>new Promise(a=>{r=a,s()}))})},async _releaseTransactionLock(){r?.(),r=null}}}var q=class extends Error{constructor(){super("Leader changed, pending operation in indeterminate state")}};async function N(g){let i;return await new Promise(e=>{navigator.locks.request(g,()=>new Promise(r=>{i=r,e()}))}),i}export{q as LeaderChangedError,z as PGliteWorker,te as worker};
//# sourceMappingURL=index.js.map